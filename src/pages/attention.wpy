<template>
    <view class="container">
        <nav-bar :navlist.sync="navlists"></nav-bar>
        <scroll-view class="scrollPage" scroll-y="true" scroll-top="{{scrollTop}}" lower-threshold="150" @scrolltolower="scrollFetch" @scroll="scroll">
            <view class="warp attention">
                <view class="attention-body">
                    <view class="attention-list">

                        <view wx:for="{{lists}}" wx:key class="attention-item {{item.status == 1?'active':''}} {{item.status==-1?'delete':''}}" @touchstart="touchstart" @touchmove="touchmove({{item}},{{index}})" @tap="goDetail({{item}})">
                            <view class="item-att-select {{item.selected?'active':''}}" @tap.stop="selectItem({{index}})"><text class="select-icon"></text></view>
                            <view class="item-att-main">
                                <view class="item-att-l">
                                    <view class="item-att-title">
                                        <text wx:if="{{item.formdata.images}}">图</text>
                                        {{item.title}}
                                    </view>
                                    <view class="item-att-body">
                                        <view class="item-att-info">
                                            <view>{{item.subtitle}}</view>
                                            <view class="item-att-price">
                                                <text wx:if="{{item.type == 'job'}}" class="price">￥<text class="price-number">{{item.formdata.jobprice}}</text>元起/月</text>
                                                <text wx:elif="{{item.type == 'home'}}" class="price">￥<text class="price-number">{{item.formdata.price}}</text>{{item.formdata.typeJson.type==0? '元/月':'万元'}}</text>
                                                <text wx:elif="{{item.type == 'car'}}" class="price">￥<text class="price-number">{{item.formdata.price}}</text>万元</text>
                                                <text wx:elif="{{item.type == 'food'||item.type == 'edu'}}" class="price">￥<text class="price-number">{{item.formdata.price}}</text>元/人</text>
                                                <text wx:elif="{{item.type == 'pet'}}" class="price">￥<text class="price-number">{{item.formdata.price}}</text>元/只</text>
                                            </view>
                                            <view class="item-att-time"><text>发布者: {{item.nickname}}</text> <text>{{item.updatedAt}}</text></view>
                                        </view>
                                        <view class="item-att-btn">
                                            <view class="item-att-type">
                                                <image src="../images/{{themeimg}}{{item.type}}.png"></image>
                                            </view>
                                            <view>
                                                <image src="../images/{{themeimg}}phone.png"></image> 电话
                                            </view>
                                        </view>
                                    </view>
                                </view>
                                <view class="item-att-r" @tap.stop="delItem({{item}},{{index}})"><text>取消</text><text>关注</text></view>
                            </view>
                        </view>


                        <!-- <view class="attention-item {{status == 1?'active':''}} {{status==-1?'delete':''}}" @touchstart="touchstart" @touchmove.stop="touchmove" @tap="goDetail('{id:1,type:job}')">
                            <view class="item-att-select active"><text class="select-icon"></text></view>
                            <view class="item-att-main">
                                <view class="item-att-l">
                                    <view class="item-att-title"><text>图</text>距离可垃圾地方李经理卡机法律框架拉动房价看了监考老师放假了是就发即可拉伸减肥的爱是理解对方考虑</view>
                                    <view class="item-att-body">
                                        <view class="item-att-info">
                                            <view>简单 方便 快捷</view>
                                            <view class="item-att-price">￥<text>1234</text>元</view>
                                            <view class="item-att-time"><text>发布者: 小程序</text> <text>2017-10-20</text></view>
                                        </view>
                                        <view class="item-att-btn">
                                            <view class="item-att-type">
                                                <image src="../images/{{themeimg}}sale.png"></image>
                                            </view>
                                            <view>
                                                <image src="../images/{{themeimg}}phone.png"></image> 电话
                                            </view>
                                        </view>
                                    </view>
                                </view>
                                <view class="item-att-r">删除</view>
                            </view>
                        </view> -->

                    </view>
                </view>
                <v-loading :loading.sync="loading" :loadend.sync="loadend"></v-loading>
            </view>
            <footer></footer>
            <toast></toast>
            <view class="attention-btn" hidden="{{showBar ? false : true}}">
                <view class="select-l">
                    <view @tap="doAllSelect({{selectAll}})">
                        <text class="select-icon {{selectAll?'active':''}}"></text>全选
                    </view>
                </view>
                <view class="select-m" @tap="cancel">取消</view>
                <view class="select-r {{selectStatus?'active':''}}" @tap="deleteSelect">删除</view>
            </view>
            <view class="attention-btns">
                <image src="../images/delete.png" @tap="edit"></image>
                <image hidden="{{!goTopStauts}}" src="../images/top.png" @tap="goTop"></image>
            </view>
        </scroll-view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '../components/navbar';
import Loading from '../components/loading';
import Footer from '../components/footer'
import Toast from '../components/toast';

import AV from '../utils/av-weapp-min.js';
// import UserAttentions from '../models/userattentions';

export default class Attention extends wepy.page {
    components = {
        'nav-bar' : NavBar,
        'v-loading' : Loading,
        'footer' : Footer,
        'toast': Toast,
    };
    data = {
        uid : '',
        navlists : [],
        curNavType : 'all',
        lists : [],
        initLists : null, //初始 list数据
        themeimg : '',
        showBar: false, //是否显示底部删除操作
        selectStatus : false, //是否有选中
        selectAll : false, //全选
        startX : 0,
        startY: 0,
        // delArrIds : null, //要删除的 arr id
        loading : false,
        loadend : false,
        page : 1, //当前页
        pageSize : 20, //每页显示多少条
        scrollTop : 0, //回到顶部
        goTopStauts : 0, //回到顶部按钮
    }
    methods = {
        touchstart(e){
            this.startX = e.changedTouches[0].clientX;
            this.startY = e.changedTouches[0].clientY;
        },
        touchmove(item,index,e){
            if(item.status==1){
                return;
            }
            var vm = this,
            // index = e.currentTarget.dataset.index,//当前索引
            startX = vm.startX,//开始X坐标
            startY = vm.startY,//开始Y坐标
            touchMoveX = e.changedTouches[0].clientX,//滑动变化坐标
            touchMoveY = e.changedTouches[0].clientY,//滑动变化坐标
            //获取滑动角度
            angle = vm.angle({ X: startX, Y: startY }, { X: touchMoveX, Y: touchMoveY });
            //滑动超过10度角 return
            if (Math.abs(angle) > 10) return;
            if (touchMoveX > startX){//右滑
              // vm.initStatus();
              vm.lists[index].status = 0;
            }else {//左滑
              vm.initStatus(0);
              vm.lists[index].status = -1;
            }
        },
        goDetail(item){
            // console.log(item);
            if(item.status==0){
                wx.navigateTo({
                    url : 'detail?id='+item.pid
                });
            }

        },
        selectItem(index){
            this.lists[index].selected = !this.lists[index].selected;
            this.checkSelectAll();
            this.checkHasSelected();
        },
        delItem(item,index){
            // this.delArrIds = [item.id];
            console.log(item.pid,item.id);
            this.delFetch([{pid:item.pid,id:item.id}]);
        },
        doAllSelect(flag){
            this.selectAllStatus(!flag);
        },
        edit(){
            this.initStatus(1);
            this.showBar = true;
        },
        goTop(){
            this.scrollTop = 0;
            // console.log('go to top');
        },
        scroll(ev){
            if(ev.detail.scrollTop > 500){
                this.goTopStauts = 1;
            }else{
                this.goTopStauts = 0;
            }
            this.scrollTop = ev.detail.scrollTop;
        },
        cancel(){
            this.initStatus(0);
            this.selectAllStatus(false);
            this.selectAll = false;
            this.showBar = false;
        },
        deleteSelect(){
            //ajax
            if(this.selectStatus){
                var arr = [];
                // this.delArrIds = [];
                for(let i=0; i<this.lists.length; i++){
                    if(this.lists[i].selected){
                        var json = {
                            pid : this.lists[i].pid,
                            id : this.lists[i].id
                        }
                        arr.push(json);
                        // this.delArrIds.push(this.lists[i].id);
                    }
                }
                this.delFetch(arr);
            }
        }
    }
    onLoad(){
        this.themeimg = this.$parent.globalData.themeimg;
        this.uid = this.$parent.globalData.userInfo.objectId;
        this.fetch();
    }
    onShow(){
        var vm = this;
        setTimeout(function(){
            var attrefresh = vm.$parent.globalData.attrefresh;
            // console.log(attrefresh,'attrefresh');
            if(attrefresh){
                vm.loadend = false;
                vm.page = 1;
                vm.scrollTop = 0;
                vm.lists = [];
                vm.initLists = [];
                vm.fetch();
                vm.$parent.globalData.attrefresh = false;
            }
        },100);
        vm.showBar = false;
        vm.selectStatus = false;
        vm.selectAll = false;
    }
    events = {
        navChange(params){
            if(params.type){
                this.curNavType = params.type;
            }else{
                this.curNavType = 'all';
            }
            this.filterList();
        }
    }
    fetch(){
        var vm = this,query = new AV.Query('UserAttentions');
        vm.loading = true;
        query.equalTo('uid', this.uid);
        query.descending('updatedAt');
        query.limit(vm.pageSize);
        query.find().then(function(data){
            console.log(data,'data');
            vm.loading = false;
            vm.makeParam(data);
            vm.page++;
            if(data.length < vm.pageSize){
                vm.loadend = true;
            }
        }).catch(function(err){
            console.log(err);
            vm.loading = false;
            vm.$invoke('toast', 'show', {
                message: '服务异常，请稍后重试',
            });
        });
    }
    scrollFetch(){
        var vm = this,query = new AV.Query('UserAttentions');
        if(vm.loadend || vm.loading){
            return;
        }
        // console.log('scrollFetch');
        vm.loading = true;
        query.equalTo('uid', this.uid);
        query.descending('updatedAt');
        query.limit(vm.pageSize);
        query.skip((vm.page-1)*vm.pageSize);
        query.find().then(function(data){
            console.log(data,'data');
            vm.loading = false;
            vm.makeParam(data);
            vm.page++;
            if(data.length < vm.pageSize){
                vm.loadend = true;
            }
        }).catch(function(err){
            console.log(err);
            vm.loading = false;
            vm.$invoke('toast', 'show', {
                message: '服务异常，请稍后重试',
            });
        });
    }
    delFetch(arr){
        console.log(arr,'del');
        var objectsArr = [],vm = this,
            delPidArr = [],
            curUserAttentions = vm.$parent.globalData.curUserAttention;
        for(let i=0; i<arr.length; i++){
            var attentItem = AV.Object.createWithoutData('UserAttentions', arr[i].id);
            delPidArr.push(arr[i].pid);
            objectsArr.push(attentItem);
        }

        AV.Object.destroyAll(objectsArr).then(function () {
            for(let i=0; i<delPidArr.length; i++){
                for(let j=0; j<vm.initLists.length;j++){
                    if(vm.initLists[j].pid == delPidArr[i]){
                        vm.initLists.splice(j,1);
                    }
                }
            }
            // if(!vm.lists.length){
            //     // initLists lists 的切换 遍历 initlists 剔除 delPid
            //     // 266 行 试试 循环 initLists
            // }
            vm.$parent.globalData.curUserAttention = vm.delFromArr(curUserAttentions,delPidArr);
            // vm.initNavList(vm.lists);
            // vm.initNavList(vm.initLists);
            vm.filterList();
            vm.initNavList();

            vm.initStatus(0);
            vm.selectAllStatus(false);
            vm.showBar = false;
            vm.hideLoading();
            vm.$apply();
        }, function (err) {
            console.log(err);
            vm.$invoke('toast', 'show', {
                message: '服务异常，请稍后重试',
            });
        });

    }
    initStatus(status){
        for(var i=0; i<this.lists.length; i++){
            this.lists[i].status = status;
        }
    }
    selectAllStatus(flag){
        for(var i=0; i<this.lists.length; i++){
            this.lists[i].selected = flag;
        }
        this.selectAll = flag;
        this.selectStatus = flag;

    }
    checkHasSelected(){ //检查是否有选中
        var flag = false;
        for(var i=0; i<this.lists.length; i++){
            if(this.lists[i].selected){
                flag = true;
                break;
            }
        }
        if(flag){
            this.selectStatus = true;
        }else{
            this.selectStatus = false;
        }
    }
    checkSelectAll(){ //检查是否全选
        var flag = true;
        for(var i=0; i<this.lists.length; i++){
            if(!this.lists[i].selected){
                flag = false;
                break;
            }
        }
        if(flag){
            this.selectAll = true;
        }else{
            this.selectAll = false;
        }
    }
    filterList(){
        var filterArr = [],type = this.curNavType;
        this.lists = this.initLists;
        if(type == 'all'){
            return ;
        }else{
            for(var i=0; i<this.lists.length; i++){
                if(this.lists[i].type == type){
                    filterArr.push(this.lists[i]);
                }
            }
            this.lists = filterArr;
        }
    }
    makeParam(data){
        // var curUserAttentions = this.$parent.globalData.curUserAttention;
        for(let i=0; i<data.length; i++){
            var listjson = data[i].attributes.pagedata;
            listjson.pid = data[i].attributes.pageid;
            listjson.id = data[i].id;
            listjson.status = 0; //状态
            listjson.selected = false; //是否选中
            listjson.updatedAt = this.$parent.timeFormate(data[i].updatedAt);
            this.lists.push(listjson);
            // if(curUserAttentions.indexOf(listjson.pid)!=-1){
            //     this.lists.push(listjson);
            // }
        }
        this.initLists = this.lists;
        this.initNavList();
        console.log(this.lists,'list');
        this.$apply();
    }
    initNavList(){
        // console.log(lists,'initNavList');
        var navArr = [];
        for(var i=0; i<this.initLists.length; i++){
            var navjson = {};
            navjson.type = this.initLists[i].type;
            navjson.name = this.initLists[i].typename;
            navArr.push(navjson);
        }
        this.uniqueNavlist(navArr);
    }
    uniqueNavlist(navArr){
        // console.log(navArr,'navArr');
        this.navlists.length = 0;
        for(let i=0; i<navArr.length;i++){
            var flag = false;
            if(this.navlists.length){
                for(let j=0; j<this.navlists.length;j++){
                    if(navArr[i].type == this.navlists[j].type){
                        flag = true;
                        break;
                    }
                }
                if(!flag){
                    this.navlists.push(navArr[i]);
                }
            }else{
                this.navlists.push(navArr[i]);
            }
        }
    }
    angle(start, end) {
       var _X = end.X - start.X,
         _Y = end.Y - start.Y
       //返回角度 /Math.atan()返回数字的反正切值
       return 360 * Math.atan(_Y / _X) / (2 * Math.PI);
    }
    showLoading(){
        wx.showLoading({
            title : '请稍等...'
        })
    }
    hideLoading(){
        setTimeout(function(){
          wx.hideLoading()
        },200)
    }
    delFromArr(targetArr,delItems){
        for(let i=0; i<delItems.length; i++){
            var delIndex = targetArr.indexOf(delItems[i]);
            targetArr.splice(delIndex,1);
        }
        return targetArr;
    }
}
</script>

<style lang="scss">
@import "../sass/_mixin.scss";
.scrollPage{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
.attention{
    overflow-x: hidden;
}
.attention-body{
    padding-top: 81rpx;
}
.attention-item{
    margin-left: -70rpx;
    margin-right: -120rpx;
    display: flex;
    padding: 20rpx 0 0;
    background: #fff;
    transition: all .3s linear;
    &:last-child{
        .item-att-body{
            border-bottom: 0;
        }
    }
    &.active{
        transform: translateX(70rpx);
    }
    &.delete{
        transform: translateX(-120rpx);
    }
}
.item-att-select{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 50rpx;
    padding: 10rpx;
    &.active{
        .select-icon{
            background: #fff;
            color: #fff;
            border: 10rpx solid $themeColor;
        }
    }
}
.item-att-main{
    flex: 1;
    display: flex;
    background: #fff;
}
.item-att-l{
    padding: 0 20rpx;
    flex: 1;
    display: flex;
    flex-direction: column;
}
.item-att-r{
    width: 120rpx;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: $red;
    color: #fff;
    font-size: 28rpx;
}

.item-att-title{
    margin-bottom: 10rpx;
    font-size: 30rpx;
    color: $fontBlack;
    @include text-overflow(2);
    text{
        margin-right: 10rpx;
        padding: 0 5rpx;
        font-size: 22rpx;
        border: 1rpx solid $themeColor;
        color: $themeColor;
    }
}
.item-att-body{
    display: flex;
    padding-bottom: 10rpx;
    border-bottom: 1rpx solid #ebebeb;
}
.item-att-info{
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    color: $gray;
    font-size: 26rpx;
    view{
        padding: 5rpx 0;
        @include text-overflow(1);
    }
    .item-att-time{
        display: flex;
        justify-content: space-between;
        text{
            flex: 1;
            @include text-overflow(1);
            &:last-child{
                padding-left: 5rpx;
                text-align: right;
            }
        }
    }
}
.item-att-price{
    color: $red;
    text{
        font-size: 34rpx;
    }
}

.item-att-btn{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 150rpx;
    padding: 0 20rpx;
    view{
        display: flex;
        align-items: center;
        justify-content: center;
        width: 140rpx;
        height: 50rpx;
        font-size: 26rpx;
        border: 1rpx solid $themeColor;
        color: $themeColor;
        border-radius: 4rpx;
        margin: 10rpx;
        image{
            width: 25rpx;
            height: 25rpx;
            margin-right: 10rpx;
            vertical-align: middle;
        }
    }
    .item-att-type{
        width: 80rpx;
        height: 80rpx;
        border: 0;
        image{
            width: 60rpx;
            height: 60rpx;
        }
    }
}
.attention-btn{
    position:fixed;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    height: 80rpx;
    font-size: 28rpx;
    color: $fontBlack;
    background: #fff;
}
.select-l{
    flex: 3;
    display: flex;
    align-items: center;
    padding-left: 20rpx;
    height: 100%;
}
.select-m{
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    color: $fontBlack;
    height: 100%;
    background: #ddd;
}
.select-icon{
    display: inline-block;
    width: 30rpx;
    height: 30rpx;
    border: 1rpx solid $gray;
    margin-right: 10rpx;
    background: #fff;
    box-sizing: border-box;
    border-radius: 15rpx;
    &.active{
        background: #fff;
        color: #fff;
        border: 10rpx solid $themeColor;
    }
}
.select-r{
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    background: $gray;
    color: #fff;
    &.active{
        background: $red;
    }
}
.attention-btns{
    position: fixed;
    right: 20rpx;
    bottom: 40rpx;
    width: 80rpx;
    image{
        width: 80rpx;
        height: 80rpx;
        opacity: .6;
        margin-top: 10rpx;
    }
}
</style>
